<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMgI10jIyMdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx8IIyIl/iMiJY4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIiXXIyIl5hkZ
        JhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIi
        JVIjIiX+IiIlxhUVFQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACMhJYEkIyb/IyIkwRcXFwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACMjJIokIyb/JCIlsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhJKckIyb/ISEkUwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyMjHSQjJv8iIiWiAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIyMdJCMm/yIi
        JaIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMi
        JZ0kIyb/ISEkUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAjIyVmJCMm/yQiJbgAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACMgJWUiIiW3Hx8fEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////8B//wOAP/wBhB/4MB8P8Pgfh+H4H8PD/D/gBBw4MAwcMBgQBDEf
        8AQxn/CEER/wBBAf8AAIP/wQh//8AYH//4HAAAAD8AAAD//+f////H////4////+H////w////+P////
        x////8f////H////x////4f///+P//////8=
</value>
  </data>
</root>